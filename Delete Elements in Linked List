// delete in starting,any index in middle and endl
#include <iostream>
using namespace std;
class node
{
    public:
    int data;
    node* next;
    
    node(int data)
    {
        this->data=data;
        this->next=NULL;
    }
    
    ~node()
    {
        int value=this->data;
        if(this->next!=NULL)
        {
            delete next;
            this->next=NULL;
        }
        cout <<endl<< "memory is free for node with data " << value << endl;
    }
};
void nodedelete(node* &head,int pos)
{
    if(pos==1)
    {
        node* temp=head;
        head=head->next;
        temp->next=NULL;
        delete temp;
    }
    else
    {
        node* curr=head;
        node* prev=NULL;
        int cnt=1;
        while(cnt<pos)
        {
            prev=curr;
            curr=curr->next;
            cnt++;
        }
        prev->next=curr->next;
        curr->next=NULL;
        delete curr;
    }
}
void print(node* &head)
{
    node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int main()
{
    node* one=new node(1);
    node* two=new node(2);
    node* three=new node(3);
    
    // one->data=1;
    one->next=two;
    
    // two->data=2;
    two->next=three;
    
    // three->data=3;
    three->next=NULL;
    
    node* head=one;
    node* tail=one;
    print(head);
    
    nodedelete(head,4);
    print(head);
    return 0;
}
